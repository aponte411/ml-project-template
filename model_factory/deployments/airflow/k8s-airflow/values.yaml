# Default values for airflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

model_factory_airflow:
  image:
    repository: airflow
    tag: latest
    pullPolicy: Always
  config:
    AIRFLOW__CORE__EXPOSE_CONFIG: true
    AIRFLOW__CORE__LOAD_EXAMPLES: false
    AIRFLOW__CORE__DAG_RUN_CONF_OVERRIDES_PARAMS: true
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: true
    AIRFLOW__ADMIN__HIDE_SENSITIVE_VARIABLE_FIELDS: false
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 5
    AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT: false
    AIRFLOW__WEBSERVER__DAG_DEFAULT_VIEW: graph
    AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT: 500
    AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT: 500
    AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: true
    AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME: ""
    AIRFLOW__KUBERNETES__IN_CLUSTER: true
    AIRFLOW__KUBERNETES__DAGS_VOLUME_SUBPATH: ""
    AIRFLOW__KUBERNETES__DAGS_VOLUME_CLAIM: ""

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

flower:
  urlPrefix: "/flower"
  resources:
     limits:
       cpu: "100m"
       memory: "128Mi"
     requests:
       cpu: "100m"
       memory: "128Mi"

web:
  resources:
    limits:
      cpu: "1"
      memory: "2Gi"
    requests:
      cpu: "0.5"
      memory: "256Mi"

scheduler:
  resources:
    limits:
      cpu: "1"
      memory: "2Gi"
    requests:
      cpu: "0.5"
      memory: "256Mi"

persistence:
  enabled: true
  existingClaim: ""
  subPath: ""

workers:
  enabled: true
  replicas: 1
  resources:
     limits:
        cpu: "4"
        memory: "8Gi"
     requests:
        cpu: "0.5"
        memory: "256Mi"
  celery:
    instances: 2

ingress:
  enabled: true
  web:
    host: ""
    path: ""
  flower:
    host: ""
    path: "/flower"

postgresql:
  persistence:
    enabled: false
  resources:
    limits:
      cpu: "250m"
      memory: 256Mi
    requests:
      cpu: "250m"
      memory: 256Mi

redis:
  enabled: true
  master:
    persistence:
      enabled: false
    resources:
      limits:
        cpu: "1"
        memory: "2G"
      requests:
        cpu: "0.5"
        memory: "512Mi"
  cluster:
    enabled: false

serviceAccount:
  create: false
  name: model_factory_service
